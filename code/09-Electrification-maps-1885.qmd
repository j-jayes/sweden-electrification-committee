---
title: "Untitled"
format: html
---



```{r}
library(tidyverse)
library(sf)

map_lan <- read_rds(here("data", "county_map.rds"))

map_lan %>% 
  ggplot() +
  geom_sf() +
  geom_sf_label(aes(label = lan_name))

map_file <- here::here("data", "maps", "1885_heat_power_2.shp")

map <- sf::read_sf(map_file)

map_file_2 <- here::here("data", "maps", "1885_water_power_2.shp")

map_2 <- sf::read_sf(map_file_2)
```

This works

```{r}
ggplot() +
  geom_sf(colour = "darkred", data = map_lan, alpha = .5) +
  geom_sf(colour = "darkred", data = map, alpha = .5) +
  geom_sf(colour = "blue", data = map_2, alpha = .5)
```

Now let's add a title

```{r}
library(ggtext)

ggplot() +
  geom_sf(colour = "#D55E00", data = map_2_simple, alpha = .5) +
  geom_sf(colour = "#0072B2", data = map_simple, alpha = .5) +
  labs(
    title = "<span style = 'font-size:14pt; font-family:Helvetica;'>The state power plant's distribution network in central Sweden</span><br>
In the years <span style = 'font-size:14pt; color:#0072B2;'>1917</span>
and <span style = 'font-size:14pt; color:#D55E00;'>1920</span>"
  ) +
  theme_bw() +
  theme(
    plot.title.position = "plot",
    plot.title = element_markdown(size = 11, lineheight = 1.2)
  )
```


## Calculate centre of polygon in R

```{r}

centroids = st_centroid(map)

ggplot() +
  geom_sf(colour = "darkred", data = map, alpha = .5) +
  geom_sf(aes(size = area), colour = "blue", data = centroids, alpha = .5)

```

## Some way to scale the area values

For the 1885 map - the scale is id 111.

```{r}
map_file_2 <- here::here("data", "maps", "1885_water_power_2.shp")

map_2 <- sf::read_sf(map_file_2)

scale <- map_2 %>% 
  filter(id == 111) %>% 
  pull(area)

conv_factor <- 400 / scale

map_2 <- map_2 %>% 
  mutate(power = area * conv_factor)

map_file <- here::here("data", "maps", "1885_heat_power_2.shp")

map <- sf::read_sf(map_file)

map <- map %>% 
  mutate(power = area * conv_factor)

map <- map %>% 
  mutate(type = "Heat power")

map_2 <- map_2 %>% 
  mutate(type = "Water power") %>% 
  filter(id != 111)

map <- map %>% 
  bind_rows(map_2)

centroids <- map %>% st_centroid()


```

Lets combine these and save

```{r}
map_out <- centroids %>% 
  select(!area) %>% 
  st_join(map %>% select(id, geometry)) %>% 
  select(-id.y) %>% 
  rename(id = id.x)

# map_out %>% write_rds(here::here("data", "maps", "1885_water_and_heat.rds"))
```

It works!

```{r}
map <- read_rds(here::here("data", "maps", "1885_water_and_heat.rds"))

map %>% 
  ggplot() +
  geom_sf(aes(colour = type, size = power))
```

### Now for the 1900 one.

Start with water power

```{r}
map_file <- here::here("data", "maps", "1900_water_power_2.shp")

map <- sf::read_sf(map_file)

scale <- map %>% 
  # that's the one that is the scale!
  filter(id == 356) %>% 
  pull(area)

# make conversion factor
conv_factor <- 6000 / scale

map <- map %>% 
  mutate(power = area * conv_factor)

# now for the heat power one

map_file_2 <- here::here("data", "maps", "1900_heat_power_2.shp")

map_2 <- sf::read_sf(map_file_2)

map_2 <- map_2 %>%
  select(!area_2) %>% 
  mutate(power = area * conv_factor)

map_2 <- map_2 %>% 
  mutate(type = "Heat power") %>% 
  filter(id != 1222)

map <- map %>% 
  mutate(type = "Water power") %>% 
  filter(id != 356)

# now to combine
map <- map %>% 
  bind_rows(map_2)

centroids <- map %>% st_centroid()

map_out <- centroids %>% 
  select(!area) %>% 
  st_join(map %>% select(id, geometry)) %>% 
  select(-id.y) %>% 
  rename(id = id.x)

# map_out %>% write_rds(here::here("data", "maps", "1900_water_and_heat.rds"))

map_out %>% 
  ggplot() +
  geom_sf(aes(colour = type, size = power))
```

### Now we want to get the parish that each is in.

```{r}
library(histmaps)

p_map <- get_boundaries("1900", "parish")

st_map <- p_map %>% left_join(geom_meta, by = c("geom_id"))

st_map <- st_transform(st_map, 3857 )

st_map %>% filter(str_detect(name, "Lund")) %>% view()

st_map %>%
  filter(county == 12) %>%
  mutate(name = str_remove(name, "församling")) %>%
  ggplot() +
  geom_sf(fill = "lightgrey", color = "black") +
  # geom_sf_label(aes(label = name)) +
  theme_minimal()
```

Maybe do it in two steps?

First find the names of the parishes that each of the power stations is in. We want to keep that information.

```{r}
overlap <- st_join(map_out, st_map)

overlap %>% 
  select(geom_id, name, id, power, type = type.x, county) %>% 
  ggplot() +
  geom_sf(data = st_map, fill = "lightgrey", colour = "black") +
  geom_sf(aes(colour = type, size = power)) 


  # filter(county == 12) %>%
  mutate(name = str_remove(name, "församling")) %>%
  ggplot() +
  geom_sf(fill = "lightgrey", color = "black") +
  # geom_sf_label(aes(label = name)) +
  theme_minimal()
```


```{r}
france_intersected = st_intersection(france, seine)


```


